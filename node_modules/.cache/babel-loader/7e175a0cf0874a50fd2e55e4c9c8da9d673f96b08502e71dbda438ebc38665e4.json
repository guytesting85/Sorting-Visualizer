{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InsertionSort = () => {\n  _s();\n  const myState = useSelector(state => state.updateProps);\n  const dispatch = useDispatch();\n  let values = myState.values.map(item => item[0]);\n  let ids = myState.values.map(item => item[1]);\n  let timer = 0;\n  let total_time = 0;\n  let timing_map = new Map();\n  for (let i = 0; i < values.length; i++) {\n    let j = i + 1;\n    while (j > 0 && values[j] < values[j - 1]) {\n      let temp = values[j];\n      values[j] = values[j - 1];\n      values[j - 1] = temp;\n      total_time++;\n      j--;\n    }\n    timing_map.set(i + 1, i + 1 - j);\n  }\n  values = myState.values.map(item => item[0]);\n  const solve = () => {\n    for (let i = 0; i < values.length - 1; i++) {\n      let ind = i + 1;\n      while (ind > 0 && values[ind] < values[ind - 1]) {\n        let j = ind;\n        let temp = values[j];\n        values[j] = values[j - 1];\n        values[j - 1] = temp;\n        temp = ids[j];\n        ids[j] = ids[j - 1];\n        ids[j - 1] = temp;\n        let new_ids = [...ids];\n        setTimeout(() => {\n          document.getElementById(new_ids[j]).style.transform = `translateX(${j * 11}px)`;\n          document.getElementById(new_ids[j - 1]).childNodes[1].style.backgroundColor = 'black';\n          setTimeout(() => {\n            document.getElementById(new_ids[j - 1]).childNodes[1].style.backgroundColor = myState.color;\n          }, myState.speed - 10);\n          document.getElementById(new_ids[j - 1]).style.transform = `translateX(${(j - 1) * 11}px)`;\n        }, timer * myState.speed);\n        timer++;\n        ind--;\n      }\n    }\n    setTimeout(() => {\n      dispatch({\n        type: 'PLAY_PAUSE',\n        _play: false\n      });\n      dispatch({\n        type: 'UPDATE_COLOR',\n        color: 'rgb(0, 182, 0)'\n      });\n    }, (total_time + 1) * myState.speed + 50);\n  };\n  useEffect(() => {\n    if (myState.algorithm === 'insertion') {\n      if (myState.play) solve();\n    }\n  }, [myState.play]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(InsertionSort, \"skz74H6TDd0rxZTKTPFjX8UUY3g=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = InsertionSort;\nexport default InsertionSort;\nvar _c;\n$RefreshReg$(_c, \"InsertionSort\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Fragment","_Fragment","jsxDEV","_jsxDEV","InsertionSort","_s","myState","state","updateProps","dispatch","values","map","item","ids","timer","total_time","timing_map","Map","i","length","j","temp","set","solve","ind","new_ids","setTimeout","document","getElementById","style","transform","childNodes","backgroundColor","color","speed","type","_play","algorithm","play","_c","$RefreshReg$"],"sources":["/Users/pranav/Downloads/AlgoVisuals-main/src/components/InsertionSort.js"],"sourcesContent":["import React,{useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst InsertionSort = () =>{\r\n   const myState = useSelector(state => state.updateProps);\r\n   const dispatch = useDispatch();\r\n\r\n   let values = myState.values.map((item) => item[0]);\r\n   let ids = myState.values.map((item) => item[1]);\r\n   let timer = 0;\r\n   let total_time = 0;\r\n   let timing_map = new Map();\r\n\r\n   for(let i = 0; i < values.length; i++){\r\n      let j = i+1;\r\n      while(j>0 && values[j]<values[j-1]){\r\n         let temp = values[j];\r\n         values[j] = values[j-1];\r\n         values[j-1] = temp;\r\n         total_time++;\r\n         j--;\r\n      }\r\n      timing_map.set(i+1,i+1-j);\r\n   }\r\n\r\n   values = myState.values.map((item) => item[0]);\r\n   \r\n   const solve = () => {\r\n      \r\n      for(let i = 0; i < values.length-1; i++){\r\n            let ind = i+1;\r\n\r\n            while(ind>0 && values[ind]<values[ind-1]){\r\n\r\n               let j = ind;\r\n\r\n               let temp = values[j];\r\n               values[j] = values[j-1];\r\n               values[j-1] = temp;\r\n\r\n               temp = ids[j];\r\n               ids[j] = ids[j-1];\r\n               ids[j-1] = temp;\r\n\r\n               let new_ids = [...ids];\r\n               \r\n               setTimeout(() => {\r\n                  \r\n                  document.getElementById(new_ids[j]).style.transform = `translateX(${j*11}px)`;\r\n                  document.getElementById(new_ids[j-1]).childNodes[1].style.backgroundColor = 'black';\r\n                  \r\n                  setTimeout(() => {\r\n                     document.getElementById(new_ids[j-1]).childNodes[1].style.backgroundColor = myState.color;\r\n                  },myState.speed-10);\r\n                  \r\n                  document.getElementById(new_ids[j-1]).style.transform = `translateX(${(j-1)*11}px)`;  \r\n               },timer*myState.speed);\r\n\r\n               timer++;\r\n               ind--;\r\n            }\r\n      }\r\n      \r\n      setTimeout(() => {\r\n         dispatch({\r\n            type:'PLAY_PAUSE',\r\n            _play:false\r\n         })\r\n\r\n         dispatch({\r\n            type:'UPDATE_COLOR',\r\n            color: 'rgb(0, 182, 0)'\r\n         })\r\n      },(total_time+1)*myState.speed+50);\r\n   }\r\n   \r\n   useEffect(() => {\r\n      if(myState.algorithm==='insertion'){\r\n         if(myState.play)\r\n            solve();\r\n      }\r\n   },[myState.play]);\r\n\r\n   return <></>;\r\n}\r\n\r\nexport default InsertionSort;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}