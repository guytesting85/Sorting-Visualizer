{"ast":null,"code":"const initializer = {\n  algorithm: 'bubble',\n  color: '#35c6ff',\n  speed: 100,\n  range: '30',\n  play: false,\n  values: [],\n  timeouts: []\n};\nconst updateProps = (state = initializer, action) => {\n  switch (action.type) {\n    case 'UPDATE_RANGE':\n      {\n        let arr = [];\n        for (let i = 0; i < action.range; i++) arr.push([Math.floor(Math.random() * 100) + 1, i]);\n        return {\n          ...state,\n          range: action.range,\n          values: arr\n        };\n      }\n    case 'UPDATE_VALUES':\n      {\n        return {\n          ...state,\n          values: action._values\n        };\n      }\n    case 'UPDATE_SPEED':\n      {\n        return {\n          ...state,\n          speed: action.speed\n        };\n      }\n    case 'UPDATE_COLOR':\n      {\n        return {\n          ...state,\n          color: action.color\n        };\n      }\n    case 'UPDATE_ALGORITHM':\n      {\n        return {\n          ...state,\n          algorithm: action.algorithm\n        };\n      }\n    case 'UPDATE_TIEMOUTS':\n      {\n        return {\n          ...state,\n          timeouts: action._timeouts\n        };\n      }\n    case 'CHANGE_VALUES':\n      {\n        let arr = [],\n          range = state.range;\n        for (let i = 0; i < range; i++) arr.push([Math.floor(Math.random() * 100) + 1, i]);\n        return {\n          ...state,\n          values: arr\n        };\n      }\n    case 'PLAY_PAUSE':\n      {\n        return {\n          ...state,\n          play: action._play\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default updateProps;","map":{"version":3,"names":["initializer","algorithm","color","speed","range","play","values","timeouts","updateProps","state","action","type","arr","i","push","Math","floor","random","_values","_timeouts","_play"],"sources":["/Users/pranav/Downloads/AlgoVisuals-main/src/reducer/updateProps.js"],"sourcesContent":["const initializer = {\r\n   algorithm: 'bubble',\r\n   color: '#35c6ff',\r\n   speed: 100,\r\n   range: '30',\r\n   play: false,\r\n   values: [],\r\n   timeouts:[]\r\n};\r\n\r\nconst updateProps = (state=initializer,action) => {\r\n   switch(action.type){\r\n      \r\n      case 'UPDATE_RANGE':{\r\n         let arr=[];\r\n         for(let i = 0; i < action.range; i++)\r\n            arr.push([Math.floor(Math.random()*100)+1,i]);\r\n\r\n         return {...state, range:action.range, values:arr};\r\n      }\r\n\r\n      case 'UPDATE_VALUES': {\r\n         return {...state,values:action._values};\r\n      }\r\n\r\n      case 'UPDATE_SPEED':{\r\n         return {...state, speed:action.speed};\r\n      }\r\n\r\n      case 'UPDATE_COLOR':{\r\n         return {...state, color:action.color};\r\n      }\r\n\r\n      case 'UPDATE_ALGORITHM':{\r\n         return {...state, algorithm:action.algorithm};\r\n      }\r\n\r\n      case 'UPDATE_TIEMOUTS':{\r\n         return {...state, timeouts:action._timeouts};\r\n      }\r\n\r\n      case 'CHANGE_VALUES':{\r\n         let arr=[],range = state.range;\r\n         for(let i = 0; i < range; i++)\r\n            arr.push([Math.floor(Math.random()*100)+1, i]);\r\n         return {...state,values:arr};\r\n      }\r\n\r\n      case 'PLAY_PAUSE': {\r\n         return {...state,play:action._play};\r\n      }\r\n\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport default updateProps;"],"mappings":"AAAA,MAAMA,WAAW,GAAG;EACjBC,SAAS,EAAE,QAAQ;EACnBC,KAAK,EAAE,SAAS;EAChBC,KAAK,EAAE,GAAG;EACVC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE,KAAK;EACXC,MAAM,EAAE,EAAE;EACVC,QAAQ,EAAC;AACZ,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAACT,WAAW,EAACU,MAAM,KAAK;EAC/C,QAAOA,MAAM,CAACC,IAAI;IAEf,KAAK,cAAc;MAAC;QACjB,IAAIC,GAAG,GAAC,EAAE;QACV,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACN,KAAK,EAAES,CAAC,EAAE,EACjCD,GAAG,CAACE,IAAI,CAAC,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,GAAG,CAAC,GAAC,CAAC,EAACJ,CAAC,CAAC,CAAC;QAEhD,OAAO;UAAC,GAAGJ,KAAK;UAAEL,KAAK,EAACM,MAAM,CAACN,KAAK;UAAEE,MAAM,EAACM;QAAG,CAAC;MACpD;IAEA,KAAK,eAAe;MAAE;QACnB,OAAO;UAAC,GAAGH,KAAK;UAACH,MAAM,EAACI,MAAM,CAACQ;QAAO,CAAC;MAC1C;IAEA,KAAK,cAAc;MAAC;QACjB,OAAO;UAAC,GAAGT,KAAK;UAAEN,KAAK,EAACO,MAAM,CAACP;QAAK,CAAC;MACxC;IAEA,KAAK,cAAc;MAAC;QACjB,OAAO;UAAC,GAAGM,KAAK;UAAEP,KAAK,EAACQ,MAAM,CAACR;QAAK,CAAC;MACxC;IAEA,KAAK,kBAAkB;MAAC;QACrB,OAAO;UAAC,GAAGO,KAAK;UAAER,SAAS,EAACS,MAAM,CAACT;QAAS,CAAC;MAChD;IAEA,KAAK,iBAAiB;MAAC;QACpB,OAAO;UAAC,GAAGQ,KAAK;UAAEF,QAAQ,EAACG,MAAM,CAACS;QAAS,CAAC;MAC/C;IAEA,KAAK,eAAe;MAAC;QAClB,IAAIP,GAAG,GAAC,EAAE;UAACR,KAAK,GAAGK,KAAK,CAACL,KAAK;QAC9B,KAAI,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,EAAES,CAAC,EAAE,EAC1BD,GAAG,CAACE,IAAI,CAAC,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,GAAG,CAAC,GAAC,CAAC,EAAEJ,CAAC,CAAC,CAAC;QACjD,OAAO;UAAC,GAAGJ,KAAK;UAACH,MAAM,EAACM;QAAG,CAAC;MAC/B;IAEA,KAAK,YAAY;MAAE;QAChB,OAAO;UAAC,GAAGH,KAAK;UAACJ,IAAI,EAACK,MAAM,CAACU;QAAK,CAAC;MACtC;IAEA;MACG,OAAOX,KAAK;EAClB;AACH,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}