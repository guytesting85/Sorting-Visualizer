{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectionSort = () => {\n  _s();\n  const myState = useSelector(state => state.updateProps);\n  const dispatch = useDispatch();\n  let values = myState.values.map(item => item[0]);\n  let ids = myState.values.map(item => item[1]);\n  const solve = () => {\n    let n = values.length;\n    for (let i = 0; i < n; i++) {\n      setTimeout(() => {\n        let ind = i;\n        for (let j = i; j < n; j++) {\n          if (values[ind] > values[j]) ind = j;\n        }\n        let temp = values[i];\n        values[i] = values[ind];\n        values[ind] = temp;\n        temp = ids[i];\n        ids[i] = ids[ind];\n        ids[ind] = temp;\n        document.getElementById(ids[i]).style.transform = `translateX(${i * 11}px)`;\n        document.getElementById(ids[ind]).style.transform = `translateX(${ind * 11}px)`;\n        document.getElementById(ids[i]).childNodes[1].style.backgroundColor = 'black';\n        setTimeout(() => {\n          document.getElementById(ids[i]).childNodes[1].style.backgroundColor = myState.color;\n        }, myState.speed * 2);\n      }, i * myState.speed * 3);\n    }\n    setTimeout(() => {\n      dispatch({\n        type: 'PLAY_PAUSE',\n        _play: false\n      });\n      dispatch({\n        type: 'UPDATE_COLOR',\n        color: 'rgb(0, 182, 0)'\n      });\n    }, myState.speed * 3 * n + 50);\n  };\n  useEffect(() => {\n    if (myState.algorithm === 'selection') {\n      if (myState.play) solve();\n    }\n  }, [myState.play]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(SelectionSort, \"skz74H6TDd0rxZTKTPFjX8UUY3g=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = SelectionSort;\nexport default SelectionSort;\nvar _c;\n$RefreshReg$(_c, \"SelectionSort\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Fragment","_Fragment","jsxDEV","_jsxDEV","SelectionSort","_s","myState","state","updateProps","dispatch","values","map","item","ids","solve","n","length","i","setTimeout","ind","j","temp","document","getElementById","style","transform","childNodes","backgroundColor","color","speed","type","_play","algorithm","play","_c","$RefreshReg$"],"sources":["/Users/pranav/Downloads/AlgoVisuals-main/src/components/SelectionSort.js"],"sourcesContent":["import React,{useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst SelectionSort = () =>{\r\n   const myState = useSelector(state => state.updateProps);\r\n   const dispatch = useDispatch();\r\n\r\n   let values = myState.values.map((item) => item[0]);\r\n   let ids = myState.values.map((item) => item[1]);\r\n\r\n   const solve = () => {\r\n      let n = values.length;\r\n\r\n      for(let i = 0; i < n; i++){\r\n\r\n         setTimeout(() => {\r\n         let ind = i;\r\n         for(let j = i; j < n; j++){\r\n            if(values[ind] > values[j])\r\n               ind = j;\r\n         }\r\n         let temp = values[i];\r\n         values[i] = values[ind];\r\n         values[ind] = temp;\r\n         \r\n         temp = ids[i];\r\n         ids[i] = ids[ind];\r\n         ids[ind] = temp;\r\n\r\n         document.getElementById(ids[i]).style.transform = `translateX(${i*11}px)`;\r\n         document.getElementById(ids[ind]).style.transform = `translateX(${ind*11}px)`;\r\n\r\n         document.getElementById(ids[i]).childNodes[1].style.backgroundColor = 'black';\r\n\r\n         setTimeout(() => {\r\n            document.getElementById(ids[i]).childNodes[1].style.backgroundColor = myState.color;\r\n         },myState.speed*2);\r\n\r\n         },i*myState.speed*3);\r\n      }\r\n\r\n      setTimeout(() => {\r\n         dispatch({\r\n            type:'PLAY_PAUSE',\r\n            _play:false\r\n         })\r\n\r\n         dispatch({\r\n            type:'UPDATE_COLOR',\r\n            color: 'rgb(0, 182, 0)'\r\n         })\r\n\r\n      },(myState.speed*3*n)+50);\r\n   };\r\n\r\n   useEffect(() => {\r\n      if(myState.algorithm==='selection'){\r\n         if(myState.play)\r\n            solve();\r\n      }\r\n   },[myState.play]);\r\n\r\n   return <></>;\r\n}\r\n\r\nexport default SelectionSort;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}