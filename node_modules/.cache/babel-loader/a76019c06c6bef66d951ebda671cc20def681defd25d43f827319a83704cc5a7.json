{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BubbleSort = () => {\n  _s();\n  const myState = useSelector(state => state.updateProps);\n  const dispatch = useDispatch();\n  let values = myState.values.map(item => item[0]);\n  let ids = myState.values.map(item => item[1]);\n  const solve = () => {\n    for (let i = values.length, timer = 0; i > 0; timer += i - 1, i--) {\n      setTimeout(() => {\n        for (let j = 1; j < i; j++) {\n          setTimeout(() => {\n            document.getElementById(ids[j]).childNodes[1].style.backgroundColor = 'black';\n            document.getElementById(ids[j - 1]).childNodes[1].style.backgroundColor = 'black';\n            setTimeout(() => {\n              document.getElementById(ids[j]).childNodes[1].style.backgroundColor = myState.color;\n              document.getElementById(ids[j - 1]).childNodes[1].style.backgroundColor = myState.color;\n            }, myState.speed - 10);\n            if (values[j] < values[j - 1]) {\n              let temp = values[j];\n              values[j] = values[j - 1];\n              values[j - 1] = temp;\n              temp = ids[j];\n              ids[j] = ids[j - 1];\n              ids[j - 1] = temp;\n              document.getElementById(ids[j]).style.transform = `translateX(${j * 11}px)`;\n              document.getElementById(ids[j - 1]).style.transform = `translateX(${(j - 1) * 11}px)`;\n            }\n          }, (j - 1) * myState.speed);\n        }\n      }, timer * myState.speed);\n    }\n    setTimeout(() => {\n      dispatch({\n        type: 'PLAY_PAUSE',\n        _play: false\n      });\n      dispatch({\n        type: 'UPDATE_COLOR',\n        color: 'rgb(0, 182, 0)'\n      });\n    }, (myState.values.length - 1) * myState.values.length / 2 * myState.speed + 50);\n  };\n  useEffect(() => {\n    if (myState.algorithm === 'bubble') {\n      if (myState.play) solve();\n    }\n  }, [myState.play]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(BubbleSort, \"skz74H6TDd0rxZTKTPFjX8UUY3g=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = BubbleSort;\nexport default BubbleSort;\nvar _c;\n$RefreshReg$(_c, \"BubbleSort\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Fragment","_Fragment","jsxDEV","_jsxDEV","BubbleSort","_s","myState","state","updateProps","dispatch","values","map","item","ids","solve","i","length","timer","setTimeout","j","document","getElementById","childNodes","style","backgroundColor","color","speed","temp","transform","type","_play","algorithm","play","_c","$RefreshReg$"],"sources":["/Users/pranav/Downloads/AlgoVisuals-main/src/components/BubbleSort.js"],"sourcesContent":["import React,{useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst BubbleSort = () =>{\r\n   const myState = useSelector(state => state.updateProps);\r\n   const dispatch = useDispatch();\r\n\r\n   let values = myState.values.map((item) => item[0]);\r\n   let ids = myState.values.map((item) => item[1]);\r\n   \r\n   const solve = () => {\r\n      \r\n      for(let i = values.length,timer = 0; i > 0;timer += i-1, i--){\r\n         setTimeout(() => {\r\n            for(let j = 1; j < i; j++){\r\n               setTimeout(() => {\r\n                  document.getElementById(ids[j]).childNodes[1].style.backgroundColor = 'black';\r\n                  document.getElementById(ids[j-1]).childNodes[1].style.backgroundColor = 'black';\r\n                  \r\n                  setTimeout(() => {\r\n                     document.getElementById(ids[j]).childNodes[1].style.backgroundColor = myState.color;\r\n                     document.getElementById(ids[j-1]).childNodes[1].style.backgroundColor = myState.color;\r\n                  },myState.speed-10);\r\n                     \r\n                  if(values[j]<values[j-1]){\r\n                     let temp = values[j];\r\n                     values[j] = values[j-1];\r\n                     values[j-1] = temp;\r\n\r\n                     temp = ids[j];\r\n                     ids[j] = ids[j-1];\r\n                     ids[j-1] = temp;\r\n                     \r\n                     document.getElementById(ids[j]).style.transform = `translateX(${j*11}px)`;\r\n                     \r\n                     document.getElementById(ids[j-1]).style.transform = `translateX(${(j-1)*11}px)`;\r\n                        \r\n                  }\r\n               },(j-1)*(myState.speed));\r\n            }\r\n         }\r\n         ,(timer)*(myState.speed))\r\n      }\r\n      \r\n      setTimeout(() => {\r\n         dispatch({\r\n            type:'PLAY_PAUSE',\r\n            _play:false\r\n         })\r\n\r\n         dispatch({\r\n            type:'UPDATE_COLOR',\r\n            color: 'rgb(0, 182, 0)'\r\n         })\r\n\r\n      },(((myState.values.length-1)*(myState.values.length))/2)*myState.speed+50);\r\n   }\r\n   \r\n   useEffect(() => {\r\n      if(myState.algorithm==='bubble'){\r\n         if(myState.play)\r\n            solve();\r\n      }\r\n   },[myState.play]);\r\n\r\n   return <></>;\r\n}\r\n\r\nexport default BubbleSort;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}